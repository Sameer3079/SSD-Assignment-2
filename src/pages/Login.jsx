import React, { Component } from 'react'
import Button from '@material-ui/core/Button'
import Card from '@material-ui/core/Card'
import CardActions from '@material-ui/core/CardActions'
import CardContent from '@material-ui/core/CardContent'

import history from '../history'

export default class Login extends Component {

    // This function is called on successful OAuth authorization
    onSuccess = response => {
        console.log('Success, Response:', response)
        // Save details to Local Storage
        localStorage.setItem('successResponse', JSON.stringify(response))
        localStorage.setItem('accessToken', response.accessToken)
        // Redirect to Home Page
        history.push('/home', '/home')
    }

    onFailure = response => {
        console.log('Error, Response=', response)
        alert('An Error Occurred')
    }

    componentDidMount() {
        // Checking whether the user is already logged in
        let successResponse = localStorage.getItem('successResponse')
        if (successResponse) {
            let obj = JSON.parse(successResponse)
            let currentTime = Date.now()
            console.log('Current Time:', currentTime)
            console.log('Token Expiration Time:', obj.tokenObj.expires_at)
            if (currentTime < obj.tokenObj.expires_at) {
                history.push('/home') // Redirect to Home Page
            }
        }
    }

    handleLoginUsingGoogleBtnClick = () => {
        /*
         * Create form to request access token from Google's OAuth 2.0 server.
         */
        // Google's OAuth 2.0 endpoint for requesting an access token
        var oauth2Endpoint = 'https://accounts.google.com/o/oauth2/v2/auth';

        // Create <form> element to submit parameters to OAuth 2.0 endpoint.
        var form = document.createElement('form');
        form.setAttribute('method', 'GET'); // Send as a GET request.
        form.setAttribute('action', oauth2Endpoint);

        /**
         * Parameters to pass to OAuth 2.0 endpoint.
         * 
         * @param clientId The client id generated by the Google API credentials manager
         * @param responseType The grant type (token=Implicit)
         * @param scope The access scopes to be requested from the user
         * @param state Used for additional security
         */
        let clientId = '344394648938-tru8bg9jvo0ang8lu70gov71dplrcvus.apps.googleusercontent.com'
        let callbackUri = 'http://localhost:3000/callback'
        let responseType = 'token' // Access Token = Implicit Grant Type
        let scope = 'https://www.googleapis.com/auth/drive' // The scope that gives access to view, edit, create and delete functionalities
        let state = Math.random().toString(36).substring(7) // Generating random string

        // Saving state in session storage so that it can be verified against later
        sessionStorage.setItem('state', state)

        var params = {
            'client_id': clientId,
            'redirect_uri': callbackUri,
            'response_type': responseType,
            'scope': scope,
            'include_granted_scopes': 'true',
            'state': state
        };

        // Add form parameters as hidden input values.
        for (var p in params) {
            var input = document.createElement('input');
            input.setAttribute('type', 'hidden');
            input.setAttribute('name', p);
            input.setAttribute('value', params[p]);
            form.appendChild(input);
        }

        // Add form to page and submit it to open the OAuth 2.0 endpoint.
        document.body.appendChild(form);
        form.submit();

    }


    render() {

        let margin = '5px'

        return (

            <div className="col-sm-12" style={{ marginTop: '50px' }}>
                <Card className="offset-sm-4 col-sm-4">
                    <CardContent>
                        {/* <div className="col-sm-12" style={{ margin: margin }}>
                            <TextField label="Username" className="col-sm-5"></TextField>
                        </div>
                        <div className="col-sm-12" style={{ margin: margin }}>
                            <TextField label="Password" className="col-sm-5" type="password"></TextField>
                        </div> */}
                        <h1>Google OAuth Web Application</h1>
                        <img src={process.env.PUBLIC_URL + "/Google-Drive-icon.png"} />
                    </CardContent>
                    <CardActions>
                        <div className="offset-sm-1 col-sm-10">
                            {/* <Button variant="contained" color="primary" style={{ margin: margin }}>
                                Login
                            </Button><br /> */}
                            <Button variant="contained" color="primary" style={{ margin: margin }} onClick={this.handleLoginUsingGoogleBtnClick}>
                                Authorize with Google Account
                            </Button><br />
                        </div><br />
                    </CardActions>
                </Card>
            </div>
        )
    }
}
